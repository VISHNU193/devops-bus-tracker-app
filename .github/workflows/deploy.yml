name: MERN CI/CD Deploy to EC2

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  deploy-backend:
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged == true)
    name: Deploy Backend to EC2
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install Dependencies
        working-directory: ./backend
        run: npm install

      - name: Build TypeScript (if applicable)
        working-directory: ./backend
        run: |
          if [ -f "tsconfig.json" ]; then
            npm run build
          fi

      - name: Decode SSH Key
        run: |
          echo "${{ secrets.EC2_KEY }}" | base64 -d > ec2_key.pem
          chmod 600 ec2_key.pem

      - name: Copy Files to EC2
        run: |
          rsync -avz -e "ssh -i ec2_key.pem -o StrictHostKeyChecking=no" ./backend/ ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:${{ secrets.EC2_APP_DIR }}

      - name: Restart App with PM2
        run: |
          ssh -i ec2_key.pem -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << EOF
            cd ${{ secrets.EC2_APP_DIR }}/dist
            npm install --omit=dev
            pm2 restart server || pm2 start server.js --name server
            pm2 save
          EOF

  deploy-frontend:
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged == true)
    name: Deploy Frontend to Vercel
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install Frontend Dependencies
        working-directory: ./frontend
        run: npm install

      - name: Build Frontend
        working-directory: ./frontend
        run: npm run build

      - name: Deploy to Vercel
        run: |
          npm install -g vercel
          vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
          vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
          vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}
